"normalDontWrapInNormal" = "Write the body of the normal statement without the \"normal {}\" statement.\nThis allows to replace one or more selected items of the normal with new ones";"normalTransformationsOn" =  "Add the settings of the transform template to this normal item.";"normalTransformationsEditButton" = "Open the transform template.";"normalMainTabView" = "Pattern: 4 block_patterns and more bumpy patterns.\nBump_map: a 2D-image is wrapped around the object for a bumpy surface.\nFunction: create your own normal, using mathematical functions";"normalAmountOn" = "Controls the apparent depth of the bumpiness.\nTypical values range from 0.0 to 1.0 but any value may be used.\nNegative values invert the pattern";"normalAmountEdit" = "Controls the apparent depth of the bumpiness.\nTypical values range from 0.0 to 1.0 but any value may be used.\nNegative values invert the pattern";"normalAccuracyOn" = "Normal uses a slope_map, whether specified or not. POV-Ray uses an accuracy distance of 0.02.\nSometimes, decreasing this value gives better accuracy.\nBy increasing this value sharp edges in the normal can be smoothed";"normalAccuracyEdit" = "Normal uses a slope_map, whether specified or not. POV-Ray uses an accuracy distance of 0.02.\nSometimes, decreasing this value gives better accuracy.\nBy increasing this value sharp edges in the normal can be smoothed";"normalBumpSizeOn" = "The relative bump size can be scaled using the bump_size modifier.\nThis can be any number other than 0 but typical values are from about 0.1 to as high as 4.0 or 5.0";"normalBumpSizeEdit" = "The relative bump size can be scaled using the bump_size modifier.\nThis can be any number other than 0 but typical values are from about 0.1 to as high as 4.0 or 5.0";"normalNoBumpScaleOn" = "By scaling a normal, the apparent depth of the bumps will also scale, causing the slope to remain the same. Adding the keyword \"no_bump_scale\" disables this feature";"normalNormalSlopeMapOn" = "Write a slope_map in your normal statement.\nTo verify or edit the parameters of this slope_map, click the edit button.";"normalNormalSlopeMapEditButton" = "Edit the slope_map.\nYou will be returned to this panel.";"normalNormalMapOn" = "Write a normal_map in your normal statement.\nTo verify or edit the parameters of this normal_map, click the edit-button.";"normalNormalMapEditButton" = "Edit the normal_map.\nYou will be returned to this panel.";"normalWaveTypePopUpButton" = "Choose one of the wave types to override the default type.";"normalWaveTypeEdit" = "Enter the exponent for the poly_wave.";	/*pattern*/"normalPatternSelectPopUpButton" = "Kind of bumpy appearance";"normalPatternTabView" = "";"normalPatternBrickFullNormal" = "Uses full normal statements for each part of the block pattern";"normalPatternBrickAmountOn" = "Controls the apparent depth of the bumpiness.\nTypical values range from 0.0 to 1.0 but any value may be used.\nNegative values invert the pattern";"normalPatternBrickAmountEdit" = "Controls the apparent depth of the bumpiness.\nTypical values range from 0.0 to 1.0 but any value may be used.\nNegative values invert the pattern";"normalPatternBrickBrickSizeOn" = "The x, y, z sizes of a brick unit. Mortar is included in the unit, as it surrounds the brick completely";"normalPatternBrickBrickSizeMatrix" = "The x, y, z sizes of a brick unit. Mortar is included in the unit, as it surrounds the brick completely";"normalPatternBrickMortarOn" = "The thickness of the mortar";"normalPatternBrickMortarEdit" = "The thickness of the mortar";"normalPatternBrickFullNormal1TypePopUp" = "Kind of bumpy appearance";"normalPatternBrickFullNormal1AmountOn" = "Controls the apparent depth of the bumpiness.\nTypical values range from 0.0 to 1.0 but any value may be used.\nNegative values invert the pattern";"normalPatternBrickFullNormal1AmountEdit" = "Controls the apparent depth of the bumpiness.\nTypical values range from 0.0 to 1.0 but any value may be used.\nNegative values invert the pattern";"normalPatternBrickFullNormal1ScaleOn" = "Changes the apparent size of the normal pattern";"normalPatternBrickFullNormal1ScalePopUp" = "Select the type of vector";"normalPatternBrickFullNormal1ScaleMatrix" = "Scale the original size of the pattern.\nValues larger than one stretch it.\nValues smaller than one squish it.\nA value of one leaves it unchanged";"normalPatternBrickFullNormal1ArmsPopUp" = "Number of arms winding around the z-axis";"normalPatternBrickFullNormal2TypePopUp" = "Choose the desired kind of bumpy appearance.";"normalPatternBrickFullNormal2AmountOn" = "Controls the apparent depth of the bumpiness.\nTypical values range from 0.0 to 1.0 but any value may be used.\nNegative values invert the pattern";"normalPatternBrickFullNormal2AmountEdit" = "Controls the apparent depth of the bumpiness.\nTypical values range from 0.0 to 1.0 but any value may be used.\nNegative values invert the pattern";"normalPatternBrickFullNormal2ScaleOn" = "Changes the apparent size of the normal pattern";"normalPatternBrickFullNormal2ScalePopUp" = "Select the type of vector";"normalPatternBrickFullNormal2ScaleMatrix" = "Scale the original size of the pattern.\nValues larger than one stretch it.\nValues smaller than one squish it.\nA value of one leaves it unchanged";"normalPatternBrickFullNormal2ArmsPopUp" = "Number of arms winding around the z-axis";	 	/*checker*/"normalPatternCheckerFullNormal" = "Uses full normal statements for each part of the block pattern";"normalPatternCheckerAmountOn" = "Controls the apparent depth of the bumpiness.\nTypical values range from 0.0 to 1.0 but any value may be used.\nNegative values invert the pattern";"normalPatternCheckerAmountEdit" = "Controls the apparent depth of the bumpiness.\nTypical values range from 0.0 to 1.0 but any value may be used.\nNegative values invert the pattern";			/*checker1*/"normalPatternCheckerFullNormal1TypePopUp" = "Kind of bumpy appearance";"normalPatternCheckerFullNormal1AmountOn" = "Controls the apparent depth of the bumpiness.\nTypical values range from 0.0 to 1.0 but any value may be used.\nNegative values invert the pattern";"normalPatternCheckerFullNormal1AmountEdit" = "Controls the apparent depth of the bumpiness.\nTypical values range from 0.0 to 1.0 but any value may be used.\nNegative values invert the pattern";"normalPatternCheckerFullNormal1ScaleOn" = "Changes the apparent size of the normal pattern";"normalPatternCheckerFullNormal1ScalePopUp" = "Select the type of vector";"normalPatternCheckerFullNormal1ScaleMatrix" = "Scale the original size of the pattern.\nValues larger than one stretch it.\nValues smaller than one squish it.\nA value of one leaves it unchanged";"normalPatternCheckerFullNormal1ArmsPopUp" = "Number of arms winding around the z-axis";			/*checker2*/"normalPatternCheckerFullNormal2TypePopUp" = "Kind of bumpy appearance";"normalPatternCheckerFullNormal2AmountOn" = "Controls the apparent depth of the bumpiness.\nTypical values range from 0.0 to 1.0 but any value may be used.\nNegative values invert the pattern";"normalPatternCheckerFullNormal2AmountEdit" = "Controls the apparent depth of the bumpiness.\nTypical values range from 0.0 to 1.0 but any value may be used.\nNegative values invert the pattern";"normalPatternCheckerFullNormal2ScaleOn" = "Changes the apparent size of the normal pattern";"normalPatternCheckerFullNormal2ScalePopUp" = "Select the type of vector";"normalPatternCheckerFullNormal2ScaleMatrix" = "Scale the original size of the pattern.\nValues larger than one stretch it.\nValues smaller than one squish it.\nA value of one leaves it unchanged";"normalPatternCheckerFullNormal2ArmsPopUp" = "Number of arms winding around the z-axis";	 	/*hexagon*/"normalPatternHexagonFullNormal" = "Uses full normal statements for each part of the block pattern";"normalPatternHexagonAmountOn" = "Controls the apparent depth of the bumpiness.\nTypical values range from 0.0 to 1.0 but any value may be used.\nNegative values invert the pattern";"normalPatternHexagonAmountEdit" = "Controls the apparent depth of the bumpiness.\nTypical values range from 0.0 to 1.0 but any value may be used.\nNegative values invert the pattern";			/*hexagon1*/	"normalPatternHexagonFullNormal1TypePopUp" = "Kind of bumpy appearance";"normalPatternHexagonFullNormal1AmountOn" = "Controls the apparent depth of the bumpiness.\nTypical values range from 0.0 to 1.0 but any value may be used.\nNegative values invert the pattern";"normalPatternHexagonFullNormal1AmountEdit" = "Controls the apparent depth of the bumpiness.\nTypical values range from 0.0 to 1.0 but any value may be used.\nNegative values invert the pattern";"normalPatternHexagonFullNormal1ScaleOn" = "Changes the apparent size of the normal pattern";"normalPatternHexagonFullNormal1ScalePopUp" = "Select the type of vector";"normalPatternHexagonFullNormal1ScaleMatrix" = "Scale the original size of the pattern.\nValues larger than one stretch it.\nValues smaller than one squish it.\nA value of one leaves it unchanged";"normalPatternHexagonFullNormal1ArmsPopUp" = "Number of arms winding around the z-axis";			/*hexagon2	*/"normalPatternHexagonFullNormal2TypePopUp" = "Kind of bumpy appearance";"normalPatternHexagonFullNormal2AmountOn" = "Controls the apparent depth of the bumpiness.\nTypical values range from 0.0 to 1.0 but any value may be used.\nNegative values invert the pattern";"normalPatternHexagonFullNormal2AmountEdit" = "Controls the apparent depth of the bumpiness.\nTypical values range from 0.0 to 1.0 but any value may be used.\nNegative values invert the pattern";"normalPatternHexagonFullNormal2ScaleOn" = "Changes the apparent size of the normal pattern";"normalPatternHexagonFullNormal2ScalePopUp" = "Select the type of vector";"normalPatternHexagonFullNormal2ScaleMatrix" = "Scale the original size of the pattern.\nValues larger than one stretch it.\nValues smaller than one squish it.\nA value of one leaves it unchanged";"normalPatternHexagonFullNormal2ArmsPopUp" = "Number of arms winding around the z-axis";			/*hexagon3	*/"normalPatternHexagonFullNormal3TypePopUp" = "Kind of bumpy appearance";"normalPatternHexagonFullNormal3AmountOn" = "Controls the apparent depth of the bumpiness.\nTypical values range from 0.0 to 1.0 but any value may be used.\nNegative values invert the pattern";"normalPatternHexagonFullNormal3AmountEdit" = "Controls the apparent depth of the bumpiness.\nTypical values range from 0.0 to 1.0 but any value may be used.\nNegative values invert the pattern";"normalPatternHexagonFullNormal3ScaleOn" = "Changes the apparent size of the normal pattern";"normalPatternHexagonFullNormal3ScalePopUp" = "Select the type of vector";"normalPatternHexagonFullNormal3ScaleMatrix" = "Scale the original size of the pattern.\nValues larger than one stretch it.\nValues smaller than one squish it.\nA value of one leaves it unchanged";"normalPatternHexagonFullNormal3ArmsPopUp" = "Number of arms winding around the z-axis";	 	/*object*/"normalPatternObjectEditObjectButton" = "To check which object will be used, or to define another object, click this button: the object's template form will be opened";"normalPatternObjectEditOutsideObjectButton" = "Open the normal template to specify the desired normal. After hitting ok you will return to this dialog";"normalPatternObjectEditInsideObjectButton" = "Open the normal template to specify the desired normal. After hitting ok you will return to this dialog";	 	/*agate*/	 	/*aoi*/	 	/*boxed*/	 	/*bozo*/	 	/*bumps*/	 	/*cells*/	 	/*crackle*/"normalPatternCrackleType1On" = "";"normalPatternCrackleType1PopUp" = "Specify the crackle type";"normalPatternCrackleType1Matrix"= "The first component determines the multiple of the distance to the closest point to be used in determining the value of the pattern at a particular point.\nThe second component determines the coëfficient applied to the second closest distance.\nThe last component corresponds to the third-closest distance";"normalPatternCrackleType1Edit" = "Enter the desired value";"normalPatternCrackleType2On" = "";"normalPatternCrackleType2PopUp" = "Specify the crackle type";"normalPatternCrackleType2Matrix"= "The first component determines the multiple of the distance to the closest point to be used in determining the value of the pattern at a particular point.\nThe second component determines the coëfficient applied to the second closest distance.\nThe last component corresponds to the third-closest distance";"normalPatternCrackleType2Edit" = "Enter the desired value";"normalPatternCrackleType3On" = "";"normalPatternCrackleType3PopUp" = "Specify the crackle type";"normalPatternCrackleType3Matrix"= "The first component determines the multiple of the distance to the closest point to be used in determining the value of the pattern at a particular point.\nThe second component determines the coëfficient applied to the second closest distance.\nThe last component corresponds to the third-closest distance";"normalPatternCrackleType3Edit" = "Enter the desired value";"normalPatternCrackleType4On" = "";"normalPatternCrackleType4PopUp" = "Specify the crackle type";"normalPatternCrackleType4Matrix"= "The first component determines the multiple of the distance to the closest point to be used in determining the value of the pattern at a particular point.\nThe second component determines the coëfficient applied to the second closest distance.\nThe last component corresponds to the third-closest distance";"normalPatternCrackleType4Edit" = "Enter the desired value";	/*cylindrical*/	/*density_file*/"normalPatternDisityFileFileNameEdit" = "File to be used";"normalPatternDisityFileFileEditButton" = "Choose the density_file";"normalPatternDisityFileInterpolationPopUp" = "Interpolation can smooth the jagged look of a map.\nType 0 (none) gives no interpolation.\nType 1 (tri_linear) and 2 (tri_cubic) give a 3-D interpolation";	/*dents*/		/*facets*/"normalPatternFacetsCoordsOn" = "Turn on/off the coords of the facets";"normalPatternFacetsCoordsEdit" = "Enter the coords of the facets";"normalPatternFacetsSizeEdit" = "Enter the size of the facets";"normalPatternFacetsSizeOn" = "Turn on/off the size of the facets";	/*fractals*/"normalPatternFractalsTypePopUp" = "Fractal type";"normalPatternFractalsTypeXEdit" = "2-dimensional vector (denoting a complex number) about which the set is calculated";"normalPatternFractalsTypeYEdit" = "2-dimensional vector (denoting a complex number) about which the set is calculated";"normalPatternFractalsExponentOn" = "Specify how the interior of the fractal is colored. Value can be an integer between 0 and 6";"normalPatternFractalsExponentEdit" = "The fractal pattern is projected onto the x-y plane. It extends infinitely in the z-direction.\nSpecify the maximum number of iterations to be used to compute the set.\nTypical values range from 10 up to 256";"normalPatternFractalsMaxIterationsEdit" = "The fractal pattern is projected onto the x-y plane. It extends infinitely in the z-direction.\nSpecify the maximum number of iterations to be used to compute the set.\nTypical values range from 10 up to 256";"normalPatternFractalsInteriorTypeOn" = "Specify how the interior of the fractal is colored. Value can be an integer between 0 and 6";"normalPatternFractalsInteriorTypePopUp" = "Specify how the interior of the fractal is colored. Value can be an integer between 0 and 6";"normalPatternFractalsInteriorTypeFactorEdit" = "The return values are multiplied by this factor before returning";"normalPatternFractalsExteriorTypeOn" = "Specify how the exterior of the fractal is colored. Value can be an integer between 0 and 6";"normalPatternFractalsExteriorTypePopUp" = "Specify how the exterior of the fractal is colored. Value can be an integer between 0 and 6";"normalPatternFractalsExteriorTypeFactorEdit" = "The return values are multiplied by this factor before returning";	 	/*gradient*/"normalPatternGradientXYZPopUp" = "Select the type of vector";"normalPatternGradientMatrix" = "Enter the x, y, z coordinates of the vector giving the orientation of the sawtooth or ramped wave appearance";	 	/*granite*/	 	/*image_pattern*/"normalPatternImagePatternFileTypePopUp" = "Image type";"normalPatternImagePatternFileNameEdit" = "Name of the image file that will be used";"normalPatternImagePatternFileNameButton" = "Choose the image file";"normalPatternImagePatternFunctionFunctionEdit" =  "Write the desired function.\nOr, choose a function or operator from the insert button";"normalPatternImagePatternFunctionFunctionButton" = "Select one of the possible functions or operators to be written at the insertion point, or to replace the selected part";"normalPatternImagePatternFunctionImageWidth" = "Specify the resolution (Width in pixels) of the resulting bitmap image";"normalPatternImagePatternFunctionImageHeight" =  "Specify the resolution (Height in pixels) of the resulting bitmap image";"normalPatternImagePatternPatternButton" = "Specify a pattern. This pattern is used to create a bitmap.\nAfter confirming (OK) you return to this dialog";"normalPatternImagePatternPigmentButton" = "Specify a pigment. This pigment is used to create a bitmap.\nAfter confirming (OK) you return to this dialog";"normalPatternImageMapProjectionPopUp" = "Specify how the image should be wrapped around the object";"normalPatternImageMapProjectionOnceOn" = "Normally image maps are tiled over every unit square of the x-y plane. Adding the \"once\" keyword eliminates all copies of the map except the one at (0,0) to (1,1)";"normalPatternImageMapInterpolationPopUp" = "Interpolation can smooth the jagged look of a bitmap.\nNormalized distance is the slightly faster of the two.\nBilinear does a better job of picking the between colors";"normalPatternImageMapUsePopUp" = "Specify which values should be used";	 		 		 		 		 		 	/*leopard*/	 	/*marble*/	 	/*onion*/	 	/*pigment_pattern*/	 	/*planar*/	 	/*projection*/"normalPatternProjectionObjectButton" = "Open the object's template to check or define the object";"normalPatternProjectionNormalPopUp" = "With:\n-point: the ray is shot in direction of this point\n-parallel: a ray is shot from each intersection point in this direction\n-normal: the ray direction is determined by the surface normal";"normalPatternProjectionXYZPopUp" = "Select the type of vector";"normalPatternProjectionXYZMatrix	" = "Enter the x, y, z components of the point";"normalPatternProjectionBlurOn" = "Also use normal entries with values between 0 and 1 in the normal_map";"normalPatternProjectionAmountEdit" = "Determines the area on which the samples are spread";"normalPatternProjectionSamplesEdit" = "Number of blur samples";	 	/*quilted*/"normalPatternQuiltedControl0Edit" = "Adjust the curvature of the seam or gauge area between the quilts.\nValues should be kept to around the 0.0 to 1.0 range.\n0.0 yields a hard edge; 1.0 more rounded edges";"normalPatternQuiltedControl1Edit" = "Adjust the curvature of the seam or gauge area between the quilts.\nValues should be kept to around the 0.0 to 1.0 range.\n0.0 yields a hard edge; 1.0 more rounded edges";	 	/*radial*/	 	/*ripples*/	 	/*slope*/"normalPatternSlopeDirectionXYZPopUp" = "Select the type of vector";"normalPatternSlopeDirectionMatrix" = "Enter the x, y, z coordinates of the direction vector";"normalPatternSlopeSlopeOn" = "Specifies which range of slopes are used";"normalPatternSlopeSlopeLowEdit" = "Enter the slope value that returns 0.0";"normalPatternSlopeSlopeHighEdit" = "Enter the slope value that returns 1.0";"normalPatternSlopeAltitudeOn" = "If set, the original slope values are altered by the special altitude gradient.\nThe new values will be a composition of both values. This way you could alter the slope values along the direction of the offset vector";"normalPatternSlopeAltitudeXYZPopUp" = "Select the type of vector";"normalPatternSlopeAltitudeMatrix" = "Enter the x, y, z coordinates of the direction vector";"normalPatternSlopeOffsetOn" = "If set, the original slope values are altered by the offset (altitude if y-direction) values.\nThe new values will be a composition of both values. This way you could alter the slope values along the direction of the offset vector";"normalPatternSlopeOffsetLowEdit" = "Enter the desired value";"normalPatternSlopeOffsetHighEdit" = "Enter the desired value";	 	/*spherical*/	 	/*spiral*/"normalPatternSpiralTypePopUp" = "The spiral1 pattern creates a spiral that winds around the z-axis similar to a screw.\nThe spiral2 pattern is a modification of the spiral1 pattern";"normalPatternSpiralNrOfArmsEdit" = "Number of arms winding around the z-axis";	 	/*waves*/	 	/*wood*/	 	/*wrinkles*/ 	/*---------		/*average*//* normalImageMap*/"normalImageMapFileTypePopUp" = "Kind of image";"normalImageMapFileButton" =  "Choose the image file";"normalImageMapFileName" ="Name of the image file that will be used";"normalImageMapFunctionButton" = "Select one of the possible functions or operators to be written at the insertion point, or to replace the selected part";"normalImageMapFunctionEdit" = "Write the desired function.\nOr, choose a function or operator from the insert button";"normalImageMapFunctionImageWidth" = "Specify the resolution (Width in pixels) of the resulting bitmap image";"normalImageMapFunctionImageHeight" = "Specify the resolution (Heigth in pixels) of the resulting bitmap image";"normalImageMapPatternButton" = "Specify a pattern. This pattern is used to create a bitmap for the bumps.\nAfter confirming (OK) you return to this dialog";"normalImageMapPigmentButton" = "Specify a pigment. This pigment is used to create a bitmap for the bumps.\nAfter confirming (OK) you return to this dialog";"normalImageMapProjectionPopUp" = "Specify how the image should be wrapped around the object";"normalImageMapProjectionOnceOn" = "The image map is repeated over every unit square of the x-y-plane like tiles. The once keyword eliminates all other copies of the map except the one at (0,0) to (1,1)";"normalImageMapInterpolationPopUp" = "Interpolation can smooth the jagged look of a bitmap.\nNormalized distance is the slightly faster of the two.\nBilinear does a better job of picking the between colors";"normalImageMapGetBumpHeightPopUp" = "For use_index, the color's palette nr is used to compute the bump's height at that point. Nr 0 would be low and nr 255 high.\nFor use_color the pixel's color is converted to gray scale intensity value and used to compute the bump's height at that point";/* normalFunction*/"normalFunctionEdit" = "Write the desired function.\nYou can also choose a function or operator from the insert button";"normalFunctionEditButton" = "Select one of the possible functions or operators to be written at the insertion point, or to replace the selected part";