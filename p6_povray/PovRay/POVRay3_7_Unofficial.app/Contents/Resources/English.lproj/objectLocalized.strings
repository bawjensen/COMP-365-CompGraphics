"objectTypePopUp" = "Select the type of object";"objectMaterialGroupOn" = "Add the \"material{}\" statement with the current settings of the pigment, normal, finish and interior templates to the object statement";"objectMaterialGroupEditButton" = "Opens the material editor to set the material parameters.\nAfter confirming (OK), you will return to this dialog";"objectTransformationGroupOn" = "Add the \"transform{}\" statement with the current settings of the transform template to the object statement";"objectTransformationEditButton" = "Opens the transform template to specify transformations performed on the object.\nAfter confirming (OK), you will return to this dialog";"objectIgnoreMaterialOn" = "Do not apply transformation to material. (By default, transformations apply to both an object and its material.)";"objectPhotonsGroupOn" = "Add the \"photons{}\" statement with the current settings of the photons template to the object statement";"objectPhotonsGroupEditButton" = "Open the photon template to set the photon options for this object.\nAfter confirming (OK), you will return to this dialog";"objectUvMappingOn" = "If set, a slice of the regular texture is taken from the XY plane and wrapped around the object, following the object's surface coordinates";"objectDoubleIlluminateOn" = "Illuminate both sides of the object's surface";"objectHollowOn" = "Normally, an object is made of a solid material that completely fills its interior.\nThis option makes it a hollow shell, which is useful if you want media effects inside an object";"objectNoImageOn" = "Controls the visibility of the object. If set, the object is invisible, but still casts shadows and reflects in other surfaces.\nDOES NOT WORK IF AUTOBOUND IS SET";"objectNoReflectionOn" = "If set, the object will not reflect on other surfaces.";"objectNoShadowOn" = "Adds the no_shadow keyword to your object. This makes the object cast no shadow";"objectNoRadiosityOn" = "Specifying no_radiosity in an object block makes that object invisible to radiosity rays, in the same way as no_image, no_reflection and no_shadow make an object invisible to primary, reflected and shadow test rays, respectively.";"objectRadiosityImportanceOn" = "If you have some comparatively small yet bright objects in your scene, radiosity will tend to produce bright splotchy artifacts unless you use a pretty high number of rays, which in turn will tremendously increase rendering time. To somewhat mitigate this issue, full ray computations are performed only for a certain portion of sample rays, depending on the importance of the first object each ray encounters.";"objectRadiosityImportanceEdit" = "a value in the range of greater than 0.0 to less than or equal to 1.0 specifying the percentage of rays to actually compute on average.";"objectBicubicPatchTypePopUp" = "Set patch_type.\nType 0: calculations are performed while rendering.\nType 1: the patch is preprocessed: speedup at the cost of memory";"objectBicubicPatchFlatnessEdit" = "With flatness 0 the patch is always subdivided to the extend specified by the u_steps and v_steps.\nWhen > than 0, then every time the patch is split, POV-Ray will check to see if there is need to split further.\nTypical values range from 0 (slowest) 1"; "objectBicubicPatchUStepsEdit" = "The keyword u_steps tells how many rows of triangles are the minimum to use to create the surface";"objectBicubicPatchVStepsEdit" = "The keyword v_steps tells how many columns of triangles are the minimum to use to create the surface";"objectBicubicPatchCorner1Matrix" = "Enter the x, y, z coordinates of the front, lower left corner of the patch";"objectBicubicPatchCorner2Matrix" = "Enter the x, y, z coordinates of the upper, right back corner of the patch";"objectBlobSphericalOn" = "Write sample syntax for a specified number of spherical components";"objectBlobSphericalNumberOfComponentsEdit" = "Enter the number of components to be written in the blob statement";"objectBlobSphericalRadiusEdit" = "Enter the radius value for each component";"objectBlobSphericalStrengthEdit" = "Enter the strength value for the components.\nSpecifies the field strength at the center of the object.\nPositive values will make that components attract other components while a negative value will make it repel other components (if positive ones)";"objectBlobSphericalTextureOn" = "Adds the \"texture {}\" statement with a default pigment to each component";"objectBlobCylindricalOn" = "Write sample syntax for a specified number of cylindrical components";"objectBlobCylindricalNumberOfComponentsEdit" = "Enter the number of components to be written in the blob statement";"objectBlobCylindricalRadiusEdit" = "Enter the radius value that will be used for each component";"objectBlobCylindricalStrengthEdit" = "Enter the strength value for the components.\nSpecifies the field strength at the center of the object.\nPositive values will make that components attract other components while a negative value will make it repel other components (if positive ones)";"objectBlobCylindricalTextureOn" = "Add the \"texture {}\" statement with a default pigment to each component";"objectBlobCylindricalEnd1Matrix" = "Enter the x, y, z coordinates of the base point of the cylindrical component";"objectBlobCylindricalEnd2Matrix" = "Enter the x, y, z coordinates of the apex point of the cylindrical component";"objectBlobThresholdEdit" = "Threshold determines the total field strength value that POV is looking for. POV looks for points where the field strength = the threshold value.\nThreshold value must be positive.\nIf the threshold value  > its strength, the component disappears";"objectBlobSturm" = "Use the Sturmian root solver which is more accurate (but slower)";"objectBoxCorner1Matrix" = "Enter the x, y, z coordinates of the front, lower left corner of the box";"objectBoxCorner2Matrix" = "Enter the x, y, z coordinates of the upper, right back corner of the box";"objectConeOpenOn" = "Normally, both ends of the object are capped by parallel flat planes. You may remove these caps by adding the keyword open";"objectConeBaseMatrix" = "Enter the x, y, z coordinates of the center of the cone's base";"objectConeBaseRadiusEdit" = "Enter the radius value for the cone's base.\nA radius of 0.0 creates a sharp point, while larger values create a clipped point";"objectConeCapMatrix" = "Enter the x, y, z coordinates of the center of the cone's cap";"objectConeCapRadiusEdit" = "Enter the radius value for the cone's top.\nA radius of 0.0 creates a sharp point, while larger values create a clipped point";"objectCylinderOpenOn" = "Normally, both ends of the object are capped by parallel flat planes. You may remove these caps by adding the keyword open";"objectCylinderBaseMatrix" = "Enter the x, y, z coordinates of the center of the cylinder's base end";"objectCylinderCapMatrix" = "Enter the x, y, z coordinates of the center of the cylinder's cap end";"objectCylinderCapRadiusEdit" = "Specify the radius of the cylinder";"objectDiscCenterMatrix" = "Enter the x, y, z coordinates of the center of the disc";"objectDiscNormalMatrix" = "Enter the x, y, z coordinates to specify the direction of the surface normal of the disc.\nThe surface normal is a vector perpendicular to the disc's surface that specifies its orientation.";"objectDiscRadiusEdit" = "Specify the radius of the disc";"objectDiscHoleRadiusOn" = "Create a circular hole in the disc";"objectDiscHoleRadiusEdit" = "Specify the radius of a circular hole in the disc";"objectHeightFieldFileTypePopUp" = "Specify the type of image used";"objectHeightFieldFileName" = "Displays the name of the image file that will be used for the height field";"objectHeightFieldFileButton" = "Select the image file needed to create a height field object";"objectHeightFieldFunctionEdit" = "Write the desired function.\nYou can also choose a function or operator through the insert button";"objectHeightFieldFunctionButton" = "Select one of the possible functions or operators to be written at the insertion point, or to replace the selected part";"objectHeightFieldFunctionImageWidth" = "Specify the resolution (width in pixels) of the resulting bitmap image";"objectHeightFieldFunctionImageHeight" = "Specify the resolution (heigth in pixels) of the resulting bitmap image";"objectHeightFieldPatternButton" = "Open the pigment template to specify a pattern. This pattern is used to create a bitmap for the height field.\nAfter confirming (OK), you return to this dialog";"objectHeightFieldPigmentButton" = "Open the pigment template to specify a pigment. This pigment is used to create a bitmap for the height field.\nAfter confirming (OK), you return to this dialog";"objectHeightFieldWaterLevelOn" = "Specify a height below which everything is clipped away.\nLegal values range from 0.0 to 1.0";"objectHeightFieldWaterLevelEdit" = "With the water_level keyword you can specify a height below which everything is clipped away.\nLegal values range from 0.0 to 1.0";"objectHeightFieldSmoothOn" = "The smooth keyword may be added to smooth the surface normal vectors, which gives a smoother look (or allows to use a lower-resolution image).\nHowever, smooth heightfields will take longer to render";"objectHeightFieldHierarchyOn" = "When using low-resolution images for the height field, the rendering speed may sometimes improve by switching off the bounding hierarchy";"objectIsoFunctionEdit" = "Write the desired function.\nYou can also choose a function or operator through the insert button";"objectIsoThresholdOn" = "The value through which an isosurface should be drawn.\nThe default is zero";"objectIsoThresholdEdit" = "The value through which an isosurface should be drawn.\nThe default is zero";"objectIsoAccuracyOn" = "Set an accuracy value other than the default of 0.001";"objectIsoAccuracyEdit" = "Set the accuracy of the solution before POV stops looking. Lower values are better but slower";"objectIsoMessageOn" = "Controls the max_gradient message flow.\nWithout this keyword, the heurisic method will be used";"objectIsoMessageMatrixOn" = "Always shows the max_gradient message";"objectIsoMessageMatrixOff" = "Never shows a max_gradient message";"objectIsoMaxGradientGroupOn" = "Use a max_gradient other than the default 1.1";"objectIsoMaxGradientOn" = "Specify the maximum value of the rate of change of the specified function along a unit distance on any ray.\nDefault is 1.1";"objectIsoMaxGradientEdit" = "Specify the maximum value of the rate of change of the specified function along a unit distance on any ray.\nDefault is 1.1";"objectIsoEvaluateOn" = " If specified, POV will attempt to determine the maximum gradient by examining the adjacent space.\nThis is most reliable when the actual maximum is close to 1 (about 0.5 to 5).";"objectIsoEvaluateEditX" = "The minimum max-gradient in the estimation process.";"objectIsoEvaluateEditY" = "An over-estimating factor.\nMax-gradient is multiplied by this parameter";"objectIsoEvaluateEditZ" = "Attenuation parameter (1 or less)";"objectIsoMaxTraceOn" = "This is either an integer or the keyword all_intersections and it specifies the number of intersections to be found with the object";"objectIsoMaxTraceMatrix" = "Specify to look for all the intersections with the object";"objectIsoMaxTraceEdit" = "Specify the number of intersections to be found with the object.\nUnless you are using the object in a CSG, 1 is usually sufficient";"objectIsoContainerObjectPopUp" = "Specify the type of containing shape";"objectIsoShowContainerObjectOn" = "Set to show the containing shape as a transparent object.\nThis way you can visualize the container and adjust it";"objectIsoContainerBoxCorner1Matrix" = "Enter the x, y, z coordinates of the front, lower left corner of the containing box";"objectIsoContainerBoxCorner2Matrix" = "Enter the x, y, z coordinates of the upper, right back corner of the containing box";"objectIsoContainerSphereCenterMatrix" = "Enter the x, y, z coordinates of the containing sphere's center";"objectIsoContainerSphereRadiusEdit" = "Specify the radius of the containing sphere";"objectIsoOpenOn" = "Use the containing shape to clip the isosurface object";"objectFractal4DjuliaParameterMatrix" = "Enter the coordinates for the 4-D vector which is the classic Julia parameter p in the iterated formula f(h)+p";"objectFractal4DAlgebraPopUp" = "Specify the kind of 4-D algebra to be used to calculate the fractal";"objectFractalFunctionPopUp" = "Determines which function is used for f(h) in the iteration formula";"objectFractalMaxIterationEdit" = "As you increase max-iterations, some points escape a hypersphere of radius 4 about the origin, forming the julia fractal.\nUsing a low max_iteration can fuse together the scattered fractal dust to make a solid object.\nA high value is more accurate but slow";"objectFractalPrecisionEdit" = "This value is a tolerance used in the determination of whether points are inside or outside the fractal object.\nLarger values give more accurate results but slower rendering";"objectFractalSliceOn" = "Reduces the 4 dimensions of the object to 3 dimensions.\nThis is accomplished by intersecting the 4-D fractal with a 3-D plane defined by the slice field and then projecting the intersection to 3-D space";"objectFractal4DNormalMatrix" = "Specify the 4-D normal, which determines the 3-D slice that is perpendicular to it.\nZero length 4-D normal vectors or a 4-D normal vector with a zero fourth component are illegal";"objectFractalDistanceEdit" = "Specify the distance of the slice plane from the origin";"objectLatheSturmOn" = "Use the Sturmian root solver which is more accurate (but slower)";"objectLatheEditButton" = "Open the graphic editor to draw a lathe profile";"objectParametricFunctionXEdit" = "Define the function x(u,v) to be used";"objectParametricFunctionXButton" = "Select one of the possible functions or operators to be written at the insertion point, or to replace the selected part";"objectParametricFunctionYEdit" = "Define the function y(u,v) to be used";"objectParametricFunctionYButton" = "Select one of the possible functions or operators to be written at the insertion point, or to replace the selected part";"objectParametricFunctionZEdit" = "Define the function z(u,v) to be used";"objectParametricFunctionZButton" = "Select one of the possible functions or operators to be written at the insertion point, or to replace the selected part";"objectParametricMaxGradientOn" = "This value specifies the maximum value of the rate of change of the specified function along a unit distance on any ray.\nDefault is 1.1";"objectParametricMaxGradientEdit" = "This value specifies the maximum value of the rate of change of the specified function along a unit distance on any ray.\nDefault is 1.1";"objectParametricAccuracyOn" = "This value is used to determine how accurate the solution must be before POV stops looking. The smaller the better, but smaller values are slower too";"objectParametricAccuracyEdit" = "This value is used to determine how accurate the solution must be before POV stops looking. The smaller the better, but smaller values are slower too";"objectParametricPrecomputeDepthsOn" = "Can speedup rendering. It simply divides parametric surfaces into small ones (2^depth) and precomputes ranges of the variables(x,y,z) which you specify after depth";"objectParametricPrecomputeDepthsEdit" = "Can speedup rendering. It simply divides parametric surfaces into small ones (2^depth) and precomputes ranges of the variables(x,y,z) which you specify after depth";"objectParametricOfVariablesXOn" = "Precompute ranges for the x variable";"objectParametricOfVariablesYOn" = "Precompute ranges for the y variable";"objectParametricOfVariablesZOn" = "Precompute ranges for the z variable";"objectParametricBounderiesUMatrix" = "Enter the values for the two-dimensional boundery vector u";"objectParametricBounderiesVMatrix" = "Enter the values for the two-dimensional boundery vector v";"objectParametricContainerObjectPopUp" = "Choose the containing shape";"objectParametricShowContainerObjectOn" = "Also show the containing shape as a transparant object.\nThis allows to adjust the container";"objectParametricContainerBoxCorner1Matrix" = "Enter the x, y, z coordinates of the front, lower left corner of the box";"objectParametricContainerBoxCorner2Matrix" = "Enter the x, y, z coordinates of the upper, right back corner of the box";"objectParametricContainerSphereCenterMatrix" = "Enter the x, y, z coordinates of the sphere's center";"objectParametricContainerSphereRadiusEdit" = "Enter the radius of the sphere";"objectPlaneNormalXYZPopUp" = "Select the type of vector";"objectPlaneNormalMatrix" = "Specify the direction of the surface normal. This is a vector perpendicular to the plane's surface. By definition it points towards the outside and away from the inside of the plane";"objectPlaneDistanceEdit" = "Specify how far the plane is moved away from the origin in the direction of the normal";"objectPolyTableView" = "Show a list of possible terms of the polynomial of the chosen order";"objectPolyPolyTypePopUp" = "Choose the order of polynomial that will be used";"objectPolySturmOn" = "Use the Sturmian root solver which is more accurate (but slower)";"objectPrismSweepTypePopUp" = "Specify how to sweep the curve along the y-axis to create a prism object.\nLinear: the prism's walls are perpendicular to the x-z-plane.\nConic: The curve is scaled down during the sweep, creating a prism with cone-like walls";"objectPrismKeepDimensionsOn" = "Keeps the dimensions of the base- or top-cap unchanged when it reaches the specified height.\nOnly available for the conical_sweep";"objectPrismKeepDimensionsPopUp" = "Specify if you want to keep the dimension of the top cap or base cap.";"objectPrismTopHeightEdit" = "Specify the height where the sweep of the curve ends.\nThis will be the top of the prism";"objectPrismBaseHeightEdit" = "Specify the height where the sweep of the curve starts.\nThis will be the base of the prism";"objectPrismBevelPrismGroupOn" = "Enable the beveling option";"objectPrismBevelPrismFractionHeightEdit" = "Enter the fraction of the prism height to be bevelled.\nEntering 10 will bevel one tenth of the prism height";"objectPrismBevelPrismFractionAngleEdit" = "Enter the beveling angle at the maximum width of the prism.\nNote that the angle becomes smaller for points closer to the center.";"objectPrismOpenOn" = "Normally, both ends of the prism are capped by parallel flat planes. You may remove these caps by adding the keyword open";"objectPrismSturmOn" = "Use the Sturmian root solver which is more accurate (but slower)";"objectPrismEditButton" = "Open the graphic editor to design the profile of the prism";"objectSorOpenOn" = "Normally, both ends of the object are capped by parallel flat planes. You may remove these caps by adding the keyword open";"objectSorSturmOn" = "Use the Sturmian root solver which is more accurate (but slower)";"objectSorEditButton" = "Open the graphic editor to design the profile of the sor";"objectPolygonEditButton" = "Open the graphic editor to design the shape of the polygon";"objectSphereCenterMatrix" = "Enter the x, y, z coordinates of the sphere's center";"objectSphereRadiusEdit" = "Specify the radius of the sphere";	"objectSpheresweepEntriesEdit" = "Enter the number of spheres used to create a spheresweep object.\nNote that the syntax will be correct for the specified number of spheres, but the coordinates and radii in the text must still be replaced manually with the correct values";"objectSpheresweepSplineTypePopUp" = "Choose the kind of spline to be used";"objectSpheresweepToleranceOn" = "Sometimes self-shading creates dark spots on the surface of the object. Increasing the depth tolerance used for intersection calculations could fix this.\nThe default is 1.0e-6";"objectSpheresweepToleranceEdit" = "Setting it to 1.0e-4 or higher could remove dark spots on the surface";"objectSuperellipsoidEastWestEdit" = "Specify the east-west roundedness of the superquadratic ellipsoid's edges.\nValues must be between 0 and 1.\nThe smaller the value, the smaller and sharper the edges will be";"objectSuperellipsoidNorthSouthEdit" = "Specify the north-south roundedness of the superquadratic ellipsoid's edges.\nValues must be between 0 and 1.\nThe smaller the value, the smaller and sharper the edges will be";"objectTextTTFFileNameEdit" = "Displays the name of the font used for the text object";"objectTextTTFFileSelectButton" = "Choose a TrueType font";"objectTextTextEdit" = "Enter the string expression to be rendered as a text object";"objectTextThicknessEdit" = "Specify the front-to-back thickness of the text characters.\nThe front of the character sits in the x-y-plane and the text is extruded in the +z-direction";"objectTextOffsetMatrix" = "Enter any extra translation (x, y, z direction) between each character, if desired";"objectTextHorizontalAlignmentTypePopUp" = "Horizontal alignment for the text string:\ndefault (left), left, center or right";"objectTextVerticalAlignmentTypePopUp" = "Vertical alignment for the text string:\ndefault (baseline), top, center or bottom";"objectTorusMajorRadiusEdit" = "Bottom-radius is a float giving the radius of the bottom sphere (centered at the origin).";"objectTorusMinorRadiusEdit" = "Top-radius is a float specifying the radius of the top sphere.\nThecenter lies on the top of the bottom sphere.";"objectTorusSturmOn" = "Use the Sturmian root solver which is more accurate (but slower)";"objectTriangleCorner1Matrix" = "Enter the x, y, z coordinates of the first corner of the triangle";"objectTriangleCorner2Matrix" = "Enter the x, y, z coordinates of the second corner of the triangle";"objectTriangleCorner3Matrix" = "Enter the x, y, z coordinates of the third corner of the triangle";"objectTriangleNormal1Matrix" = "Specify the direction of the surface normal at the first corner of the triangle";"objectTriangleNormal2Matrix" = "Specify the direction of the surface normal at the second corner of the triangle";"objectTriangleNormal3Matrix" = "Specify the direction of the surface normal at the third corner of the triangle";"objectTriangleWriteMeshTriangleOn" = "Write the correct syntax for a mesh with the specified number of triangles.\nThe coordinates in the text must still be replaced manually with the correct values.\nCheck the options \"smooth\" if wanted";"objectTriangleWriteMeshEntriesEdit" = "Specify the number of triangles that should be included in the mesh statement.";"objectTriangleSmoothTriangleOn" = "Smooth the triangle.\nThe way the bending of the surface is simulated depends on the directions of the surface normals at the corners of the triangle";"objectTriangleInsideVectorOn" = "Makes a triangle mesh solid, so that it can be used in CSG objects.\nThis will only work accurately with meshes which are completely closed volumes";"objectTriangleInsideXYZVectorPopUp" = "Choose the type of vector";"objectTriangleInsideXYZVectorMatrix" = "Enter the x, y, z values of the direction vector";