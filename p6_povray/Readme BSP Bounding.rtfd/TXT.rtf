{\rtf1\ansi\ansicpg1252\cocoartf949\cocoasubrtf330
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fswiss\fcharset0 LucidaConsole;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww20320\viewh15420\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f0\fs24 \cf0 {{\NeXTGraphic Pasted Graphic.tiff \width13160 \height8080
}¬}\

\f1\fs28 \
\pard\pardeftab720\ql\qnatural
\cf0   BSP Bounding\
  ------------\
\
  BSP (Binary Space Partitioning) tree bounding is now available. To turn\
  it on use '+B2' or 'Bounding_Method=2' in the INI file or on the command-\
  line. When it is in use you will get some additional statistics in the\
  output pane regarding the built tree.\
\
  Please keep in mind that this implementation of BSP is highly beta and\
  will not speed up scenes in many cases (and in fact may slow some down).\
  In particular the building of the tree can take a long time and lots of\
  memory in severe cases. Using the BSP tree rather than our traditional\
  BVH system (default or +B1) is a choice best made for specific scenes\
  that will benefit from the way the BSP operates, and in particular if\
  the render is long enough to offset the build time. (The BSP tree build\
  time will be constant for a given scene and set of BSP parameters,\
  regardless of the output resolution. A 30-second BSP build may not be\
  a good choice on a 60-second test render but may be acceptable for a\
  60-minute final render if the use of BSP adds a few PPS).\
\
  On some scenes the difference however will be dramatic, with short\
  build times and radically increased render speed.\
\
  We have provided some BSP-related options via the INI file and encourage\
  you to experiment with them to see if you can get better results than\
  the default values built in to POV-Ray. We will listen to feedback from\
  this and if necessary tweak the defaults. We do not guarantee that all\
  of the following INI file settings will remain in the final release of\
  3.7.\
\
    BSP_MaxDepth=128\
    BSP_BaseAccessCost=1.0\
    BSP_ChildAccessCost=1.5\
    BSP_IsectCost=150.0\
    BSP_MissChance=0.2\
\
  The values shown above are the default. You can also get the defaults\
  if you use a value of 0 for any of the above (or of course just by not\
  specifying the option at all). For an explanation of what the values\
  mean you may refer to Ray Tracing News v17n1 (look for Eric Haines'\
  article on BSP), or follow the discussion on BSP that is sure to crop\
  up in the beta-test group.\
\
  Please note that we are aware of some render artifacts visible with +B2\
  and are seeking to address them. Don't be surprised if you find some,\
  and if you can generate a minimal scene demonstrating them feel free to\
  post it to the appropriate group.\
\
  Example BSP scene\
  -----------------\
\
  There is a scene included with this release called 'Tango.pov' which is\
  a good example of a scene that benefits from the BSP bounding.\
\
  Tango.pov rendered at 800x600, no AA -\
\
    With +B1 : 70 seconds total\
    With +B2 : 48 seconds total\
}